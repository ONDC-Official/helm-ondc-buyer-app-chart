apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-catalog-service'
  labels:
    app: catalog-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog-service
  template:
    metadata:
      labels:
        app: catalog-service
    spec:
      containers:
        - name: catalog-service
          image: '{{ .Values.catalog_service.repository.image }}{{ if ne .Values.catalog_service.repository.tag "" }}:{{ .Values.catalog_service.repository.tag }}{{ end }}'
          ports:
            - name: pyport
              containerPort: 5555
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-mongodb-admin-password
                  key: password
            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  name: mongodb-admin-config
                  key: host
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: mongodb-admin-config
                  key: port
            - name: MONGO_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mongodb-admin-config
                  key: database
            - name: MONGO_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: mongodb-admin-config
                  key: username
            - name: MONGO_SSL
              valueFrom:
                configMapKeyRef:
                  name: mongodb-admin-config
                  key: ssl
            - name: MONGO_REPLICA_SET
              valueFrom:
                configMapKeyRef:
                  name: mongodb-admin-config
                  key: replica_set

            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-cluster-default-user
                  key: host
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-cluster-default-user
                  key: username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-cluster-default-user
                  key: password
            - name: BHASHINI_ULCA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: bhashini-secret
                  key: ulca_api_key
            - name: BHASHINI_USERID
              valueFrom:
                secretKeyRef:
                  name: bhashini-secret
                  key: user_id
            - name: MONGO_DATABASE_URL
              value: "mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@$(MONGO_HOST):$(MONGO_PORT)/$(MONGO_DATABASE)?replicaSet=$(MONGO_REPLICA_SET)&ssl=$(MONGO_SSL)"
            - name: ENV
              value: '{{ tpl .Values.catalog_service.environment.ENV . }}'
            - name: LANGUAGE_LIST
              value: '{{ tpl .Values.catalog_service.environment.LANGUAGE_LIST . }}'
            - name: CONSUMER_MAX_WORKERS
              value: '{{ tpl .Values.catalog_service.environment.CONSUMER_MAX_WORKERS . }}'
            - name: BULK_CHUNK_SIZE
              value: '{{ tpl .Values.catalog_service.environment.BULK_CHUNK_SIZE . }}'
            - name: ELASTIC_SEARCH_URL
              value: '{{ tpl .Values.catalog_service.environment.ELASTIC_SEARCH_URL . }}'

---

apiVersion: v1
kind: Service
metadata:
  name: '{{ .Release.Name }}-catalog-service-external'
  labels:
    app: catalog-service
spec:
  selector:
    app: catalog-service
  ports:
    - protocol: TCP
      port: 5555
      targetPort: 5555
  type: NodePort

apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-py-protocol-consumer'
  labels:
    katenary.io/component: py-protocol-consumer
    katenary.io/project: '{{ .Chart.Name }}'
    katenary.io/release: '{{ .Release.Name }}'
  annotations:
    katenary.io/docker-compose-sha1: 817e1a57696cf49186bcb8a53d0979b0437f075d
    katenary.io/version: 2.0.0-beta2
spec:
  replicas: 1
  selector:
    matchLabels:
      katenary.io/component: py-protocol-consumer
      katenary.io/release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        katenary.io/component: py-protocol-consumer
        katenary.io/release: '{{ .Release.Name }}'
    spec:
      initContainers:
        - name: check-rabbitmq
          image: busybox
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking rabbitmq port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z {{ .Release.Name }}-rabbitmq 5672 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
        - name: check-mongo1
          image: busybox
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking mongo1 port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z {{ .Release.Name }}-mongo1 27017 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
      containers:
        - name: py-protocol-consumer
          image: '{{ .Values.py_protocol_consumer.repository.image }}{{ if ne .Values.py_protocol_consumer.repository.tag "" }}:{{ .Values.py_protocol_consumer.repository.tag }}{{ end }}'
          env:
            - name: BAP_PRIVATE_KEY
              value: '{{ tpl .Values.py_protocol_consumer.environment.BAP_PRIVATE_KEY . }}'
            - name: MONGO_DATABASE_URL
              value: '{{ tpl .Values.py_protocol_consumer.environment.MONGO_DATABASE_URL . }}'
            - name: CONSUMER_MAX_WORKERS
              value: '{{ tpl .Values.py_protocol_consumer.environment.CONSUMER_MAX_WORKERS . }}'
            - name: ENV
              value: '{{ tpl .Values.py_protocol_consumer.environment.ENV . }}'
            - name: RABBITMQ_HOST
              value: '{{ tpl .Values.py_protocol_consumer.environment.RABBITMQ_HOST . }}'
            - name: FLASK_SERVER
              value: '{{ tpl .Values.py_protocol_consumer.environment.FLASK_SERVER . }}'
            - name: BAP_ID
              value: '{{ tpl .Values.py_protocol_consumer.environment.BAP_ID . }}'
            - name: BAP_PUBLIC_KEY
              value: '{{ tpl .Values.py_protocol_consumer.environment.BAP_PUBLIC_KEY . }}'
            - name: BAP_UNIQUE_KEY_ID
              value: '{{ tpl .Values.py_protocol_consumer.environment.BAP_UNIQUE_KEY_ID . }}'


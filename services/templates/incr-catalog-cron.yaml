# daily cron for incr catalog cron
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: '{{ .Values.global.namespace }}'
  name: '{{ .Release.Name }}-incr-catalog-cron'
spec:
  schedule: "30 12 * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 6
  suspend: false
  jobTemplate:
    spec:
      activeDeadlineSeconds: 36000
      backoffLimit: 5
      template:
        spec:
          containers:
            - name: inc-catalog-cron
              image: '{{ (lookup "v1" "ConfigMap" .Values.global.namespace "catalog-cron-version-config").data.image_tag }}'
              imagePullPolicy: IfNotPresent
              resources:
                requests:
                  memory: "6Gi"
                  cpu: "2"
                limits:
                  memory: "6Gi"
                  cpu: "2"
              env:
                - name: MONGO_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: my-mongodb-admin-password
                      key: password
                - name: MONGO_HOST
                  valueFrom:
                    configMapKeyRef:
                      name: mongodb-admin-config
                      key: host
                - name: MONGO_PORT
                  valueFrom:
                    configMapKeyRef:
                      name: mongodb-admin-config
                      key: port
                - name: MONGO_DATABASE
                  valueFrom:
                    configMapKeyRef:
                      name: mongodb-admin-config
                      key: database
                - name: MONGO_USERNAME
                  valueFrom:
                    configMapKeyRef:
                      name: mongodb-admin-config
                      key: username
                - name: MONGO_SSL
                  valueFrom:
                    configMapKeyRef:
                      name: mongodb-admin-config
                      key: ssl
                - name: MONGO_REPLICA_SET
                  valueFrom:
                    configMapKeyRef:
                      name: mongodb-admin-config
                      key: replica_set

                - name: EXPECTED_RESPONSE_TIME
                  value: '{{ tpl .Values.py_ondc_protocol.environment.EXPECTED_RESPONSE_TIME . }}'
                - name: BAP_ID
                  value: '{{ tpl .Values.py_ondc_protocol.environment.BAP_ID . }}'
                - name: BAP_UNIQUE_KEY_ID
                  value: '{{ tpl .Values.py_ondc_protocol.environment.BAP_UNIQUE_KEY_ID . }}'
                - name: BAP_PUBLIC_KEY
                  value: '{{ tpl .Values.py_ondc_protocol.environment.BAP_PUBLIC_KEY . }}'
                - name: BAP_URL
                  value: '{{ tpl .Values.py_ondc_protocol.environment.BAP_URL . }}'
                - name: MONGO_DATABASE_URL
                  value: "mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@$(MONGO_HOST):$(MONGO_PORT)/$(MONGO_DATABASE)?replicaSet=$(MONGO_REPLICA_SET)&ssl=$(MONGO_SSL)"
                - name: ENV
                  value: '{{ tpl .Values.py_ondc_protocol.environment.ENV . }}'
                - name: BAP_PRIVATE_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ondc-private-keys
                      key: buyer_app_private_key
                - name: REGISTRY_BASE_URL
                  value: '{{ tpl .Values.py_ondc_protocol.environment.REGISTRY_BASE_URL . }}'
                - name: ELASTIC_SEARCH_QUEUE_ENABLE
                  value: '{{ tpl .Values.py_ondc_protocol.environment.ELASTIC_SEARCH_QUEUE_ENABLE . }}'
                - name: FULL_OR_INC
                  value: 'inc'

          restartPolicy: OnFailure